#!/bin/bash

POLROOT=/mnt/gpfs/resources/policies/by_stgpool
POLOPT="-s /mnt/gpfs/policytmp -g /mnt/gpfs/policytmp -N tsm01"
LOGDIR=/var/log/gpfs/policies
EMAILDEST='foo@bar.com'

EVENTTYPE=$1
FSNAME=$2
STGPOOL=$3

echo "    Callback event: $EVENTTYPE, fs:$FSNAME stgpool:$STGPOOL"


exit 0; 
# Check for valid events that this script can handle
if [ $EVENTTYPE != 'lowDiskSpace' ] && [ $EVENTTYPE != 'noDiskSpace' ]; then
  echo "Event type: $EVENTTYPE not handled. Exiting."
  exit 1;
fi

# If there's no disk space, send an urgent email
if [ $EVENTTYPE = 'noDiskSpace' ]; then
  echo "$STGPOOL noDiskSpace" | /bin/mail -s "GPFS Critical Error: $STGPOOL noDiskSpace" $EMAILDEST
fi

# Valid event recognised
if [ -r "$POLROOT/$STGPOOL/${STGPOOL}_hsm.pol" ]; then 

  if [ -f "$POLROOT/$STGPOOL/${STGPOOL}_hsm.pol.isdisabled" ]; then
    echo "       $STGPOOL HSM policy has been manually disabled"; 
    exit 0; 
  fi

  # Check what mode the policy should be running in
  if [ -f "$POLROOT/$STGPOOL/${STGPOOL}_hsm.pol.testmode" ]; then
    RUNMODE="-I test"
  else
    RUNMODE="-I yes"
  fi
  POLOPT="$POLOPT $RUNMODE"

  INSTANCES=$(ps -ef | grep  "/usr/lpp/mmfs/bin/mmapplypolicy $FSNAME -P $POLROOT/$STGPOOL/${STGPOOL}_hsm.pol" | grep -v grep | wc -l)

  if [ $INSTANCES -gt 0 ]; then
    echo "      FS policy already running.  Not starting this instance."
  else 
    echo "      Processing HSM policy $POLROOT/$STGPOOL/${STGPOOL}_hsm.pol on file system $FSNAME mode: $RUNMODE"

    # Run the policy
    GPFSCMD="/usr/lpp/mmfs/bin/mmapplypolicy $FSNAME -P $POLROOT/$STGPOOL/${STGPOOL}_hsm.pol $POLOPT > $LOGDIR/${STGPOOL}_hsm.pol.log.$(date +'%Y.%m.%d.%H.%M.%S').$(hostname -s) 2>&1" 

    eval $GPFSCMD
    RET=$?
  fi

else

  # Log error message in GPFS ras log
  echo "$POLROOT/$STGPOOL/${STGPOOL}_hsm.pol not found."

  # Generate warning email
  echo "$POLROOT/$STGPOOL/${STGPOOL}_hsm.pol not found." | /bin/mail -s "GPFS Critical Error: $STGPOOL migrate script not found" $EMAILDEST

  RET=1
fi

exit $RET

# EOF
